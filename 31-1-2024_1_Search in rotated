POTD-#31
TASK-2-SEARCH IN SORTED ARRAY
APPROACH-
1.)Create two pointer,one point at first element and another one at last element,then calculate mid which points mid element of bothe.
2.)If that mid element is equal to target then return mid,otherwise if target is greater than element points by first pointer and less than mid then set second pointer to mid-1,else set first pointer to mid+1.
3.)If target is greater than mid and less than element points by second element then set first pointer to mid+1,else set second pointer to mid-1.
SOLUTION-
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int l=0,h=nums.size()-1,mid;
        while(l<=h){
            mid=(l+h)/2;
            if(nums[mid]==target)
            return mid;
           if(nums[l]<=nums[mid]){
               if(nums[mid]>target && nums[l]<=target)
               h=mid-1;
               else
               l=mid+1;
           }
           else {
               if(nums[mid]<target && nums[h]>=target)
               l=mid+1;
               else
               h=mid-1;
           }
           
        }
        return -1;
    }
};
TIME COMPLEXITY-
O(logn)
SPACE COMPLEXITY-
O(1)
