POTD-#44
TASK-1-REMOVE DUPLICATES
APPROACH-
1.)Create a node points to previous node of current node and then comapring the value of bothe,if they are same then delete the current node and move forward
SOLUTION-
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(head==NULL)
        return NULL;
        ListNode* prev=head;
        ListNode* temp=head->next;
         while(temp!=NULL){
            if(prev->val==temp->val){
                prev->next=temp->next;
                ListNode* curr=temp->next;
                temp->next=NULL;
                temp=curr;
            }
            else{
                prev=temp;
                temp=temp->next;
            }

        }
        return head;
    }
};
TIME COMPLEXITY-
O(N)
SPACE COMPLEXITY-
O(1)
