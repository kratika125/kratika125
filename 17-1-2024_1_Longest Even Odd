POTD-#17
TASK-1-LONGEST EVEN ODD SUBARRAY
APPROACH-
1.)If the element is even then check its next element(odd or not).
2.)If it is odd the increase count and i.
3.)Otherwise compare count with answer and store max of count and answer in answer.
4.)If the element found is odd then repeat step 3.
SOLUTION-
class Solution {
public:
    int longestAlternatingSubarray(vector<int>& nums, int th) {
        int c=0,ans=0;
        for(int i=0;i<nums.size();i++){
            if(nums[i]%2==0 && nums[i]<=th){
                c++;
                if(i!=nums.size()-1){
               if(nums[i+1]%2!=0 && nums[i+1]<=th){
                   c++;
                   i++;
               }
               else{
                   ans=max(ans,c);
                    c=0;
               }
                }
                //i++;
            }
            else{
                 ans=max(c,ans);
                c=0;
           
            }
        }
        return max(ans,c);
    }
};
