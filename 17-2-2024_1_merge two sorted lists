POTD-#46
TASK-1-MERGE TWO SORTED LISTS
APPROACH-
1.)Create a array which stores the value of nodes of bothe lists and then sort the array and then create a list which stores the value of array.
SOLUTION-
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        vector<int>v;
        while(list1!=NULL){
            v.push_back(list1->val);
            list1=list1->next;
        }
         while(list2!=NULL){
            v.push_back(list2->val);
            list2=list2->next;
        }
        sort(v.begin(),v.end());
        ListNode* head=NULL;
          ListNode* tail=NULL;
        for(auto i:v){
              ListNode* temp=new ListNode(i);
              if(head==NULL){
                 head=temp;
                 tail=temp;  
              }
              else{
            tail->next=temp;
            tail=tail->next;
              }
            
        }
        return head;
       
    }
};
TIME COMPLEXITY-
O(nlogn)
SPACE COMPLEXITY-
O(n)
