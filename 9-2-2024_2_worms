POTD-#39
TASK-2-WORMS
APPROACH-
1.)Firstly we find prefix sum so that we can get the maximum number of worms that a pile contain,then we simply apply binary search and calculate the index.
SOLUTION-
#include <bits/stdc++.h>
using namespace std;
int main()
{
   long long n,x,m,l,h,mid,flag;
   cin>>n;
   vector<int>v;
   while(n--){
    cin>>x;
    v.push_back(x);
   }
   vector<int>p(v.size());
   p[0]=v[0];
   for(int i=1;i<v.size();i++)
   p[i]=v[i]+p[i-1];
   cin>>m;
   while(m--){
    cin>>x;
    flag=0;
    l=0,h=p.size()-1;
    while(l<=h){
      mid=(l+h)/2;
      if(p[mid]>x)
      h=mid-1;
      else if(p[mid]<x)
      l=mid+1;
      else
      {
        flag=1;
        break;}
    }
    if(flag==1)
    cout<<mid+1<<endl;
    else
    cout<<l+1<<endl;
     }
    return 0;
}
Time Complexity-
O(logn)
Space Complexity-
O(n)
