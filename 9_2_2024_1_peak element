POTD-#39
TASK-1-PEAK ELEMENT
APPROACH-
1.)Firstly we check at corners,if corner element is greater than its next element,it means they are peak element,we simply return it.
2.)Otherwise,we start from low and high pointers and a mid which points to mid element and check if mid is greater than mid-1 and greater than mid+1,then return it,else,if mid element is greater than mid-1,set 
low to mid+1,else high to mid-1.
SOLUTION-
class Solution {
public:
    int findPeakElement(vector<int>& nums) {
        int l=1,h=nums.size()-2,mid;
        if(nums.size()==1)
        return 0;
       if(nums[0]>nums[1])
        return 0;
        if(nums[nums.size()-2]<nums[nums.size()-1])
        return nums.size()-1;
        while(l<=h){
          mid=(l+h)/2;
          if(nums[mid]>nums[mid-1] && nums[mid+1]<nums[mid]) 
          return mid;
          else{
              if(nums[mid]>nums[mid-1]) 
              l=mid+1;
              else
              h=mid-1;
          }
          
        }
        return -1;
    }
};
TIME COMPLEXITY-
O(logn)
SPACE COMPLEXITY-
O(1)
