POTD-#47
TASK-2-MERGE K SORTED LISTS
APPROACH-
Create a vector which contain the value of nodes of all lists and then sort it and put these values in new list.
SOLUTION-
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        vector<int>v;
        for(int i=0;i<lists.size();i++){
            ListNode* temp=lists[i];
            while(temp!=NULL){
            v.push_back(temp->val);
            temp=temp->next;
        }
        }
        sort(v.begin(),v.end());
        ListNode* head=NULL;
        ListNode* tail=NULL;
    for(auto i:v){
         ListNode* temp1=new ListNode(i);
         if(head==NULL){
             head=temp1;
             tail=temp1;
         }
         else{
             tail->next=temp1;
             tail=tail->next;
         }
    }
    return head;
    }
};
TIME COMPLEXITY-
O(nlogn)
SPACE COMPLEXITY-
O(n)
